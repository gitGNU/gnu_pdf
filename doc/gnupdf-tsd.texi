\input texinfo
@comment $Id: gnupdf-tsd.texi,v 1.2 2008/02/24 17:22:04 jemarch Exp $
@comment %**start of header
@setfilename gnupdf-tsd.info
@settitle GNU PDF Library Test Specification Document
@comment %**end of header

@set VERSION 0.1

@copying
This is the @cite{GNU PDF Library Test Specification Document},
updated for @strong{libgnupdf} version @strong{@value{VERSION}}.

Copyright @copyright{} 2007, 2008 Free Software Foundation, Inc.

@quotation
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.2 or
any later version published by the Free Software Foundation; with no
Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts. A
copy of the license is included in the section entitled ``GNU Free
Documentation License''.
@end quotation
@end copying

@titlepage
@sp 6
@center @titlefont{GNU PDF Library Test Specification Document}
@sp 4
@center Updated for version @value{VERSION}.
@sp 5
@page Free Software Foundation
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@contents

@ifnottex
@node Top
@top GNU PDF Library Test Specification Document

GNU PDF Library Test Specification Document

@insertcopying
@end ifnottex

@menu
* Unit Testing::
* Subsystem Testing::
* System Testing::
* GNU Free Documentation License:: Distribution terms of this document.

Indices

* Function index::
@end menu

@node Unit Testing
@chapter Unit Testing

@menu
* Base Layer Modules::
@end menu

@node Base Layer Modules
@section Base Layer Modules

@menu
* Memory Allocation Module::
* Stream Module::
@end menu

@node Memory Allocation Module
@subsection Memory Allocation Module

@menu
* pdf_alloc::
* pdf_realloc::
* pdf_dealloc::
@end menu

@node pdf_alloc
@subsubsection pdf_alloc

@deffn Test pdf_alloc_001
Allocate some bytes.
@table @strong
@item Success condition
The call should not produce an error.
@table
@end deffn

@node pdf_realloc
@subsubsection pdf_realloc

@deffn Test pdf_realloc_001
Reallocate some bytes.
@table @strong
@item Success condition
The call should not produce an error.
@table
@end deffn


@node pdf_dealloc
@subsubsection pdf_dealloc

@deffn Test pdf_dealloc_001
Deallocate memory.
@table @strong
@item Success condition
The call should not produce an error.
@table
@end deffn

@node Stream Module
@subsection Stream Module

@menu
* pdf_create_file_stm::
@end menu

@node pdf_create_file_stm
@subsubsection pdf_create_file_stm

@deffn Test pdf_create_file_stm_001
Try to open a file stream to a non-existing file.
@table @strong
@item Success condition
@code{pdf_create_file_stm} should return a @code{NULL} pointer.
@end table
@end deffn

@deffn Test pdf_create_file_stm_002
Open a file stream to an existing file in read-only mode.
@table @strong
@item Success condition
@code{pdf_create_file_stm} should return a correct stream object.
@end table
@end deffn

@deffn Test pdf_create_file_stm_003
Open a file stream to a non existing file in write-only mode.
@table @strong
@item Success condition
@code{pdf_create_file_stm} should return a correct stream object.
@end table
@end deffn

@deffn Test pdf_create_file_stm_004
Open a file stream to an existing file in write-only mode.
@table @strong
@item Success condition
@code{pdf_create_file_stm} should return a correct stream object.
@end table
@end deffn

@node Subsystem Testing
@chapter Subsystem Testing

@node System Testing
@chapter System Testing

@node GNU Free Documentation License
@appendix GNU Free Documentation License

@include fdl.texi

@node Function index
@unnumbered Function index

@printindex fn

@bye
